---
import type { MarkdownInstance } from 'astro';
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

type Post = MarkdownInstance<{
  title: string;
  tags: string[];
}>;

export async function getStaticPaths(): Promise<any> {
  const allPosts: Post[] = await Astro.glob('../posts/*.md');

  const uniqueTags: string[] = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat())
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts: Post[] = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts }
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as { posts: Post[] };
---

<BaseLayout title={tag} description={tag}>
  <div class="flex-grow">
    <h2>Posts tagged with {tag}:</h2>
    <ul>
      {
        posts.map((post: Post) => (
          <BlogPost url={post.url} title={post.frontmatter.title} />
        ))
      }
    </ul>
  </div>
</BaseLayout>
